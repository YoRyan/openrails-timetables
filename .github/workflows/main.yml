# This is a basic workflow to help you get started with Actions

name: Build timetables

# Controls when the action will run. Triggers the workflow on push or pull request 
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Install Python 3
      uses: actions/setup-python@v1.2.0
      with:
        python-version: 3.x

    - name: Install libspatialindex
      run: sudo apt-get install libspatialindex-dev

    - name: Install autotable
      uses: BSFishy/pip-action@v1
      with:
        packages: git+https://github.com/YoRyan/autotable@0256ee18df4180134d47415ab50ac62cc435f987

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Build timetables
      run: |
        set -e
        function build()
        {
                ttdir="$1"
                recipes=("$ttdir"/*.yaml)
                mock "$ttdir"
                for r in "${recipes[@]}"; do
                        autotable "$ttdir"/.build "$r"
                done
        }
        function mock()
        {
                ttdir="$1"
                builddir="$ttdir"/.build
                routedir="$builddir"/ROUTES/$(basename "$ttdir")

                rm -rf "$builddir"
                mkdir -p "$builddir"/ROUTES
                cp -r "$ttdir"/.route "$routedir"

                mkdir -p "$builddir"/TRAINS/CONSISTS
                if [[ -d "$ttdir"/CONSISTS ]]; then
                        cp "$ttdir"/CONSISTS/* "$builddir"/TRAINS/CONSISTS
                fi
                if [[ -d "$ttdir"/.consists ]]; then
                        cp "$ttdir"/.consists/* "$builddir"/TRAINS/CONSISTS
                fi

                mkdir -p "$routedir"/PATHS
                if [[ -d "$ttdir"/PATHS ]]; then
                        cp "$ttdir"/PATHS/* "$routedir"/PATHS
                fi
        }
        timetables=("$GITHUB_WORKSPACE"/*/)
        for tt in "${timetables[@]}"; do
                build "$tt"
        done

    - name: Package timetables
      run: |
        set -e
        shopt -s nullglob
        function package()
        {
                ttdir="$1"
                outdir="$2"/$(basename "$ttdir")
                mkdir -p "$outdir"
                cp "$ttdir"/*.timetable-or "$ttdir"/*.timetablelist-or \
                        "$ttdir"/README* "$outdir"
                if [[ -d "$ttdir"/CONSISTS ]]; then
                        cp -r "$ttdir"/CONSISTS/ "$outdir"
                fi
                if [[ -d "$ttdir"/PATHS ]]; then
                        cp -r "$ttdir"/PATHS/ "$outdir"
                fi
        }
        cd "$GITHUB_WORKSPACE"
        artifacts=.artifacts
        timetables=(*/)
        for tt in "${timetables[@]}"; do
                package "$tt" "$artifacts"
        done

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: All timetables
        path: .artifacts
